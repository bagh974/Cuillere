@model Cuillere.Models.RecetteDetail

@{
    ViewBag.Title = "Add";
}
<h2>@Html.DisplayFor(model => model.Recette.Name)</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ajout d'un ingrédient</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
            @Html.LabelFor(model => model.RecetteId, "Recette", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RecetteId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecetteId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Recette.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Recette.Name, new { htmlAttributes = new { Name = "Recette_Name", @class = "form-control" } })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.RecetteId, "Recette", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RecetteId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RecetteId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IngredientId, "Ingredient", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model =>model.Ingredient.Name, new { htmlAttributes = new { Name = "Ingredient_Name", @class = "form-control"} })
                @Html.HiddenFor(model => Model.Ingredient.Name, new { Value = ""})
                @Html.ValidationMessageFor(model => model.Ingredient.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.unite, "Unité", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.unite, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.unite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="ajout" value="Ajouter" class="btn btn-default" />
                <input type="submit" name="ajout" value="Terminer" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour", "Index", "Recettes")
</div>